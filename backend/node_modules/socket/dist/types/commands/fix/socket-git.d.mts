import { PackageURL } from '@socketregistry/packageurl-js';
import type { SocketArtifact } from '../../utils/alert/artifact.mts';
export type GitCreateAndPushBranchOptions = {
    cwd?: string | undefined;
    email?: string | undefined;
    user?: string | undefined;
};
export type SocketBranchParser = (branch: string) => SocketBranchParseResult | null;
export type SocketBranchParseResult = {
    fullName: string;
    newVersion: string;
    type: string;
    workspace: string;
    version: string;
};
export type SocketBranchPatternOptions = {
    newVersion?: string | undefined;
    purl?: string | undefined;
    workspace?: string | undefined;
};
export declare function createSocketBranchParser(options?: SocketBranchPatternOptions | undefined): SocketBranchParser;
export declare const genericSocketBranchParser: SocketBranchParser;
export declare function getSocketBranchFullNameComponent(pkgName: string | PackageURL | SocketArtifact): string;
export declare function getSocketBranchName(purl: string | PackageURL | SocketArtifact, newVersion: string, workspace?: string | undefined): string;
export declare function getSocketBranchPackageVersionComponent(version: string | PackageURL | SocketArtifact): string;
export declare function getSocketBranchPattern(options?: SocketBranchPatternOptions | undefined): RegExp;
export declare function getSocketBranchPurlTypeComponent(purl: string | PackageURL | SocketArtifact): string;
export declare function getSocketBranchWorkspaceComponent(workspace: string | undefined): string;
export declare function getSocketCommitMessage(purl: string | PackageURL | SocketArtifact, newVersion: string, workspace?: string | undefined): string;
export declare function getSocketPullRequestBody(purl: string | PackageURL | SocketArtifact, newVersion: string, workspace?: string | undefined): string;
export declare function getSocketPullRequestTitle(purl: string | PackageURL | SocketArtifact, newVersion: string, workspace?: string | undefined): string;
//# sourceMappingURL=socket-git.d.mts.map